{"version":3,"sources":["ProductDetails/ProductDetails.module.css","App.module.css","ProductPreview/ProductPreview.module.css","TopBar/TopBar.module.css","Utils/ProductData.js","ProductDetails/ProductDetails.js","ProductPreview/ProductPreview.js","TopBar/TopBar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ProductData","title","description","colorOptions","styleName","imageUrl","featureList","Object","freeze","ProductDetails","props","coloroptions","data","map","item","pos","classArr","classes","ProductImage","currentPrevPos","push","SelectedProductImage","key","className","join","src","alt","onClick","onColorOptionClick","featureoption","featureArrClass","FeatureItem","showHeartBeatSect","SelecetdFeatureItem","onfeatureItemClick","ProductTitle","ProductDescription","SectionHeading","PrimaryButton","ProductPreview","currentHour","Date","getHours","currentMinutes","getMinutes","currenPreviewImg","showHeartBeat","HeartbeatData","aria-hidden","TimeData","TopBar","App","state","productData","currentPos","showHeartBeatSection","setState","showHeart","MainContainer","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.74306fdc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProductData\":\"ProductDetails_ProductData__T4-Nu\",\"ProductTitle\":\"ProductDetails_ProductTitle__2p83y\",\"ProductDescription\":\"ProductDetails_ProductDescription__116T7\",\"SectionHeading\":\"ProductDetails_SectionHeading__221fb\",\"ProductImage\":\"ProductDetails_ProductImage__1Pe86\",\"SelectedProductImage\":\"ProductDetails_SelectedProductImage__jzfKF\",\"FeatureItem\":\"ProductDetails_FeatureItem__cZU5G\",\"SelecetdFeatureItem\":\"ProductDetails_SelecetdFeatureItem__3MJEb\",\"PrimaryButton\":\"ProductDetails_PrimaryButton__3xdT4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainContainer\":\"App_MainContainer__2VXOU\",\"ProductPreview\":\"App_ProductPreview__19hVQ\",\"ProductData\":\"App_ProductData__31kYV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProductPreview\":\"ProductPreview_ProductPreview__1hPW5\",\"TimeData\":\"ProductPreview_TimeData__2q4Js\",\"HeartbeatData\":\"ProductPreview_HeartbeatData__2N_0Z\",\"beat\":\"ProductPreview_beat__m139b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TopBar\":\"TopBar_TopBar__3lR7x\"};","const ProductData = {\r\n    title: 'FitBit 19 - The Smartest Watch',\r\n    description: 'Lorem ipsum dolor Lorem ipsum dolor Lorem ipsum dolor Lorem ipsum dolor Lorem ipsum dolor Lorem ipsum dolor.',\r\n    colorOptions: [\r\n        {\r\n            styleName: 'Black Strap',\r\n            imageUrl: 'https://imgur.com/iOeUBV7.png'\r\n        },\r\n        {\r\n            styleName: 'Red Strap',\r\n            imageUrl: 'https://imgur.com/PTgQlim.png'\r\n        },\r\n        {\r\n            styleName: 'Blue Strap',\r\n            imageUrl: 'https://imgur.com/Mplj1YR.png'\r\n        },\r\n        {\r\n            styleName: 'Purple Strap',\r\n            imageUrl: 'https://imgur.com/xSIK4M8.png'\r\n        },\r\n    ],\r\n    featureList: [\r\n        \"Time\", \"Heart Rate\"\r\n    ]\r\n}\r\n\r\nObject.freeze(ProductData); //This line of code just makes your object as a constant. No values can be updated.\r\n\r\nexport default ProductData;","import React from 'react'\r\nimport classes from './ProductDetails.module.css'\r\n\r\nexport default function ProductDetails(props) {\r\n  const coloroptions = props.data.colorOptions.map((item,pos) => {\r\n    const classArr = [classes.ProductImage];\r\n    if(pos === props.currentPrevPos){\r\n      classArr.push(classes.SelectedProductImage);\r\n    }\r\n    return (\r\n    <img key={pos} className={classArr.join(' ')} src={item.imageUrl} alt={item.styleName} onClick = {()=> props.onColorOptionClick(pos)}/>\r\n      )\r\n    })\r\n    const featureoption = props.data.featureList.map((item, pos) => {\r\n      const featureArrClass = [classes.FeatureItem]\r\n      if(pos === 1 && props.showHeartBeatSect ){\r\n        featureArrClass.push(classes.SelecetdFeatureItem)\r\n      } else if(pos === 0 && !props.showHeartBeatSect ){\r\n        featureArrClass.push(classes.SelecetdFeatureItem)\r\n      } \r\n      return (\r\n      <button key={pos} className={featureArrClass.join(' ')} onClick={()=>props.onfeatureItemClick(pos)}>{item}</button>\r\n      )\r\n    })\r\n        return (           \r\n          <div className={classes.ProductData}>\r\n          <h1 className={classes.ProductTitle}>{props.data.title}</h1>\r\n          <p className={classes.ProductDescription}>{props.data.description}</p>\r\n          <h3 className={classes.SectionHeading}>Select Color</h3>\r\n          <div>\r\n            {coloroptions}            \r\n            </div>      \r\n          <h3 className={classes.SectionHeading}>Features</h3> \r\n          <div>\r\n            {featureoption}\r\n          </div>\r\n          <button className={classes.PrimaryButton}>Buy Now</button>\r\n          </div> \r\n        )\r\n}\r\n","import React from 'react';\r\nimport classes from './ProductPreview.module.css';\r\nexport default function ProductPreview(props) {\r\n    const currentHour = new Date().getHours() > 9 ? new Date().getHours() : '0'+ new Date().getHours();\r\n    const currentMinutes = new Date().getMinutes() > 9 ? new Date().getMinutes() : '0'+ new Date().getMinutes();\r\n        return (\r\n            <div className={classes.ProductPreview}>                \r\n            <img src={props.currenPreviewImg} alt=\"Product preview\" />\r\n            {props.showHeartBeat ? \r\n    <div className={classes.HeartbeatData}>\r\n        <i className=\"fa fa-heartbeat\" aria-hidden=\"true\"></i><p>78</p>\r\n        </div> : \r\n    <div className={classes.TimeData}>{currentHour}:{currentMinutes}</div>}\r\n            </div>\r\n        )\r\n}\r\n","import React from 'react'\r\nimport classes from './TopBar.module.css'\r\nexport default function TopBar() {\r\n        return (\r\n            <div>\r\n              \r\n        <header className=\"AppHeader\"><nav className={classes.TopBar}><img src=\"https://www.india.com/wp-content/uploads/2020/07/Amazon.jpg\" alt=\"Amazon logo\" /> </nav></header>  \r\n            </div>\r\n        )\r\n}\r\n","import React,{Component} from 'react';\r\nimport classes from './App.module.css';\r\nimport ProductData from './Utils/ProductData';\r\nimport ProductDetails from './ProductDetails/ProductDetails';\r\nimport ProductPreview from './ProductPreview/ProductPreview';\r\nimport TopBar from './TopBar/TopBar'\r\nclass App extends Component  {\r\n  state = {\r\n    productData: ProductData,\r\n    currentPos:0,\r\n    showHeartBeatSection:false\r\n  }\r\n  onColorOptionClick = (pos) => {\r\n    this.setState({\r\n      currentPos:pos\r\n    })\r\n  }\r\n  onfeatureItemClick = (pos) => {\r\n    let showHeart = false;\r\n    if(pos === 1){\r\n      showHeart = true\r\n    }\r\n    this.setState({\r\n      showHeartBeatSection: showHeart\r\n    })\r\n  }\r\n  render(){\r\n    return (\r\n      <div className=\"App\">\r\n        <TopBar/>\r\n        <div className={classes.MainContainer}>\r\n          <div className={classes.ProductPreview}>\r\n          { <ProductPreview currenPreviewImg = {this.state.productData.colorOptions[this.state.currentPos].imageUrl} showHeartBeat = {this.state.showHeartBeatSection}/> }\r\n          </div>\r\n          <div className={classes.ProductData}>\r\n            <ProductDetails data={this.state.productData} onColorOptionClick={this.onColorOptionClick} currentPrevPos={this.state.currentPos} onfeatureItemClick = {this.onfeatureItemClick} showHeartBeatSect = {this.state.showHeartBeatSection} />   \r\n          </div>               \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  }\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}